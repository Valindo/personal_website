{"body": "<div class=\"section\" id=\"at-nelkinda-coderetreat\">\n<h1>At Nelkinda Coderetreat<a class=\"headerlink\" href=\"#at-nelkinda-coderetreat\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Completely unexpected of what is there, I registered\nfor  <a class=\"reference external\" href=\"http://nelkinda.com/events/2016-07-16-4th-Nelkinda-Coderetreat\">Coderetreat that\u2019s\nheld at Nelkinda</a>\nwhich was on 16th of July 2016. Facilitated by <a class=\"reference external\" href=\"https://twitter.com/SiddheshNikude\">Siddhesh Nikude</a> and <a class=\"reference external\" href=\"https://twitter.com/ShwetaSadawarte\">Shweta Sadawarte</a>\nit was a long but a really nice event. More than anything else I got to learn a lot from that event\nand I will write some of my experience here.</p>\n<p>The session was split into code sprints and retrospectives. There was a 45 minute of code\nsprint followed by a 30-minute retrospective. For every code sprint and retrospective cycle,\nthey kept two people to write one code to enforce pair programming. For the first code sprint\nretrospective cycle, the pairing was done by splitting people into two types, one were the\nones who had done TDD before and the others who had not done TDD and/or had heard about TDD\nbefore. We were given a problem to solve. The aim of the code sprint was not to solve the\ngiven problem but to focus on the practices such as clean code, writing tests and following\nTDD. We were also free to choose the language of our choice rather than enforcing a language\nupon us.</p>\n<div class=\"figure align-center\" id=\"id1\">\n<img alt=\"Nelkinda Code Retrospective\" src=\"/images/code_retrospective_nelkinda.jpg\" />\n<p class=\"caption\"><span class=\"caption-text\">One of the retrospective, me in yellow telling what happened in the code sprint</span></p>\n</div>\n<div class=\"section\" id=\"the-way-the-whole-event-went\">\n<h2>The way the whole event went<a class=\"headerlink\" href=\"#the-way-the-whole-event-went\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Initially, I was paired with another student who was not very familiar with TDD. I started by\nintroducing him the red-green-refactor cycle. But these are the things that I have learnt on\nmy own and have not worked in an industry and/or done any projects this way to do it the right\nway. So I was not knowing if I am doing this the right way or not. Finally, at the\nretrospective session I came to know that I was doing this at least 90% of times the right\nway. The problem that was given to us was tic tac toe. We had to design a two player tic tac\ntoe game. For eg: if player 1 plays, then, player 2 will play, then the player 1 and it will\nkeep alternating till either of the players wins or if the board is full. So, we started from\ninitially deciding how the board is structured and so on what kinds of methods to use to\ndesign this. At the retrospective session, we came to know about each other\u2019s approaches and\nshared a lot of knowledge about the right way to do things and not so right way to do things.\nThe initial discussion was about what data structure was chosen for the board. The people\nusing Java chose ArrayList the others chose two-dimensional array. I chose Python List since\nI was using Python as my language.</p>\n<p>For every subsequent code sprint, we had to delete the code and start from scratch. The\napproaches took a totally different turn when the discussion went to the clarity of code\nin the subsequent code retrospective. The expert programmers started bashing loops and how\nit makes the code unreadable. Even I like to avoid using loops, esp. in Python it\u2019s really\neasy to use lambdas and different types of comprehensions. Hence, things that need multiple\nloops can be reduced to just a couple of lines of readable code.</p>\n<p>In between, I switched from Python to Java because I was paired with a person who was unaware\nof Python and knew only Java. In Java, I had to go through the JUnit framework and tried to\nuse functional programming concepts. As I come from a Python background, I am used to lambdas\nand comprehensions. I tried to do the same using the Java 8 lambdas and ArrayList on which I\ncould run the lambdas. It was a crazy experience and a pretty steep learning curve since I\u2019ve\nnever used lambdas in Java before. Also, my partner was not very comfortable with lambdas and\nquite a lot of time was spent in both of us learning how it works.</p>\n<p>Later I was paired with my friend <a class=\"reference external\" href=\"https://twitter.com/Mistcrafter\">Douglas Vaz</a>\nwho introduced me to a new way of writing code that is BDD. \u201cBDD is TDD done right\u201d this is\nthe statement most of the blogs and or websites all over the internet contain. From what I\u2019ve\nlearnt, in BDD you don\u2019t have to think about the implementation of the feature that you are\ngoing to test. Instead, just write a test about the behaviour or the flow of the feature that\nyou are testing and then go on modifying the main code to pass all the tests.</p>\n<p>This all was a very wonderful experience, what I\u2019ve written here is barely scratching the\nsurface, in reality, you have to be there to feel the way clean coding is done, esp. when you\nare paired with others. Finally, we sat and refactored all the code till we finished off the\nwhole problem. The code on tic-tac-toe is really messy in spite of using multiple techniques\nand hence I\u2019ve decided to rewrite the code in the right way and then post it here or maybe\nwrite another blog on that and put the link here.</p>\n</div>\n</div>\n", "alabaster_version": "0.7.8", "display_toc": true, "title": "At Nelkinda Coderetreat", "sourcename": "2016-07-18-at-nelkinda-coderetreat.rst.txt", "customsidebar": null, "metatags": "", "current_page_name": "2016-07-18-at-nelkinda-coderetreat", "next": {"link": "../2018-01-03-sicp-challenge/", "title": "SICP Challenge"}, "rellinks": [["genindex", "General Index", "I", "index"], ["2018-01-03-sicp-challenge", "SICP Challenge", "N", "next"], ["2016-07-14-finally-an-android-app", "Finally an Android app", "P", "previous"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">At Nelkinda Coderetreat</a><ul>\n<li><a class=\"reference internal\" href=\"#the-way-the-whole-event-went\">The way the whole event went</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../2016-07-14-finally-an-android-app/", "title": "Finally an Android app"}, "page_source_suffix": ".rst"}